@startuml

title __SRC's Class Diagram__\n

  package  {
    class BuyGUI {
        ~ p : JPanel
        ~ p2 : JPanel
        ~ textArea : JTextArea
        ~ scrollPane : JScrollPane
        ~ itemString : String[]
        ~ itemList : JComboBox
        + BuyGUI()
        + actionPerformed()
    }
  }
  


  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTFrame {
        {static} - serialVersionUID : long
        # AccessibleAWTFrame()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTWindow {
        {static} - serialVersionUID : long
        # AccessibleAWTWindow()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum Type {
      NORMAL
      UTILITY
      POPUP
    }
  }
  

  package  {
    class WindowDisposerRecord {
        ~ owner : WeakReference<Window>
        ~ weakThis : WeakReference<Window>
        ~ context : WeakReference<AppContext>
        ~ WindowDisposerRecord()
        + updateOwner()
        + dispose()
    }
  }
  

  package  {
    class AccessibleAWTContainer {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleContainerHandler : ContainerListener
        # AccessibleAWTContainer()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getAccessibleAt()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class DropTargetEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - DropTargetEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    interface EventTargetFilter {
        {abstract} + accept()
    }
  }
  

  package  {
    class MouseEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - MouseEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    class WakingRunnable {
        ~ WakingRunnable()
        + run()
    }
  }
  

  package  {
    class AWTTreeLock {
        ~ AWTTreeLock()
    }
  }
  

  package  {
    abstract class AccessibleAWTComponent {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleAWTComponentHandler : ComponentListener
        # accessibleAWTFocusHandler : FocusListener
        # AccessibleAWTComponent()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
        + getAccessibleName()
        + getAccessibleDescription()
        + getAccessibleRole()
        + getAccessibleStateSet()
        + getAccessibleParent()
        + getAccessibleIndexInParent()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getLocale()
        + getAccessibleComponent()
        + getBackground()
        + setBackground()
        + getForeground()
        + setForeground()
        + getCursor()
        + setCursor()
        + getFont()
        + setFont()
        + getFontMetrics()
        + isEnabled()
        + setEnabled()
        + isVisible()
        + setVisible()
        + isShowing()
        + contains()
        + getLocationOnScreen()
        + getLocation()
        + setLocation()
        + getBounds()
        + setBounds()
        + getSize()
        + setSize()
        + getAccessibleAt()
        + isFocusTraversable()
        + requestFocus()
        + addFocusListener()
        + removeFocusListener()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum BaselineResizeBehavior {
      CONSTANT_ASCENT
      CONSTANT_DESCENT
      CENTER_OFFSET
      OTHER
    }
  }
  

  package  {
    class BltBufferStrategy {
        # caps : BufferCapabilities
        # backBuffers : VolatileImage[]
        # validatedContents : boolean
        # width : int
        # height : int
        - insets : Insets
        # BltBufferStrategy()
        + dispose()
        # createBackBuffers()
        + getCapabilities()
        + getDrawGraphics()
        ~ getBackBuffer()
        + show()
        ~ showSubRegion()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
    }
  }
  

  package  {
    class BltSubRegionBufferStrategy {
        # BltSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class DummyRequestFocusController {
        - DummyRequestFocusController()
        + acceptRequestFocus()
    }
  }
  

  package  {
    class FlipBufferStrategy {
        # numBuffers : int
        # caps : BufferCapabilities
        # drawBuffer : Image
        # drawVBuffer : VolatileImage
        # validatedContents : boolean
        ~ width : int
        ~ height : int
        # FlipBufferStrategy()
        # createBuffers()
        - updateInternalBuffers()
        # getBackBuffer()
        # flip()
        ~ flipSubRegion()
        # destroyBuffers()
        + getCapabilities()
        + getDrawGraphics()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
        + show()
        ~ showSubRegion()
        + dispose()
    }
  }
  

  package  {
    class FlipSubRegionBufferStrategy {
        # FlipSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class ProxyCapabilities {
        - orig : BufferCapabilities
        - ProxyCapabilities()
    }
  }
  

  package  {
    enum VSyncType {
      VSYNC_DEFAULT
      VSYNC_ON
      VSYNC_OFF
      id
    }
  }
  

  package  {
    class FlipContents {
        {static} - I_UNDEFINED : int
        {static} - I_BACKGROUND : int
        {static} - I_PRIOR : int
        {static} - I_COPIED : int
        {static} - NAMES : String[]
        {static} + UNDEFINED : FlipContents
        {static} + BACKGROUND : FlipContents
        {static} + PRIOR : FlipContents
        {static} + COPIED : FlipContents
        - FlipContents()
    }
  }
  

  package  {
    class SingleBufferStrategy {
        - caps : BufferCapabilities
        + SingleBufferStrategy()
        + getCapabilities()
        + getDrawGraphics()
        + contentsLost()
        + contentsRestored()
        + show()
    }
  }
  

  package  {
    class CheckoutGUI {
        - name : String
        - phoneNumber : String
        - address : String
        - towncity : String
        - postcode : String
        - country : String
        - cardNumber : String
        - expiryDate : String
        - cvv : String
        {static} ~ summary : String
        ~ nametxt : JTextField
        ~ addresstxt : JTextField
        + CheckoutGUI()
    }
  }
  

  package  {
    class AccessibleJFrame {
        # AccessibleJFrame()
        + getAccessibleName()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTFrame {
        {static} - serialVersionUID : long
        # AccessibleAWTFrame()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTWindow {
        {static} - serialVersionUID : long
        # AccessibleAWTWindow()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum Type {
      NORMAL
      UTILITY
      POPUP
    }
  }
  

  package  {
    class WindowDisposerRecord {
        ~ owner : WeakReference<Window>
        ~ weakThis : WeakReference<Window>
        ~ context : WeakReference<AppContext>
        ~ WindowDisposerRecord()
        + updateOwner()
        + dispose()
    }
  }
  

  package  {
    class AccessibleAWTContainer {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleContainerHandler : ContainerListener
        # AccessibleAWTContainer()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getAccessibleAt()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class DropTargetEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - DropTargetEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    interface EventTargetFilter {
        {abstract} + accept()
    }
  }
  

  package  {
    class MouseEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - MouseEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    class WakingRunnable {
        ~ WakingRunnable()
        + run()
    }
  }
  

  package  {
    class AWTTreeLock {
        ~ AWTTreeLock()
    }
  }
  

  package  {
    abstract class AccessibleAWTComponent {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleAWTComponentHandler : ComponentListener
        # accessibleAWTFocusHandler : FocusListener
        # AccessibleAWTComponent()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
        + getAccessibleName()
        + getAccessibleDescription()
        + getAccessibleRole()
        + getAccessibleStateSet()
        + getAccessibleParent()
        + getAccessibleIndexInParent()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getLocale()
        + getAccessibleComponent()
        + getBackground()
        + setBackground()
        + getForeground()
        + setForeground()
        + getCursor()
        + setCursor()
        + getFont()
        + setFont()
        + getFontMetrics()
        + isEnabled()
        + setEnabled()
        + isVisible()
        + setVisible()
        + isShowing()
        + contains()
        + getLocationOnScreen()
        + getLocation()
        + setLocation()
        + getBounds()
        + setBounds()
        + getSize()
        + setSize()
        + getAccessibleAt()
        + isFocusTraversable()
        + requestFocus()
        + addFocusListener()
        + removeFocusListener()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum BaselineResizeBehavior {
      CONSTANT_ASCENT
      CONSTANT_DESCENT
      CENTER_OFFSET
      OTHER
    }
  }
  

  package  {
    class BltBufferStrategy {
        # caps : BufferCapabilities
        # backBuffers : VolatileImage[]
        # validatedContents : boolean
        # width : int
        # height : int
        - insets : Insets
        # BltBufferStrategy()
        + dispose()
        # createBackBuffers()
        + getCapabilities()
        + getDrawGraphics()
        ~ getBackBuffer()
        + show()
        ~ showSubRegion()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
    }
  }
  

  package  {
    class BltSubRegionBufferStrategy {
        # BltSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class DummyRequestFocusController {
        - DummyRequestFocusController()
        + acceptRequestFocus()
    }
  }
  

  package  {
    class FlipBufferStrategy {
        # numBuffers : int
        # caps : BufferCapabilities
        # drawBuffer : Image
        # drawVBuffer : VolatileImage
        # validatedContents : boolean
        ~ width : int
        ~ height : int
        # FlipBufferStrategy()
        # createBuffers()
        - updateInternalBuffers()
        # getBackBuffer()
        # flip()
        ~ flipSubRegion()
        # destroyBuffers()
        + getCapabilities()
        + getDrawGraphics()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
        + show()
        ~ showSubRegion()
        + dispose()
    }
  }
  

  package  {
    class FlipSubRegionBufferStrategy {
        # FlipSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class ProxyCapabilities {
        - orig : BufferCapabilities
        - ProxyCapabilities()
    }
  }
  

  package  {
    enum VSyncType {
      VSYNC_DEFAULT
      VSYNC_ON
      VSYNC_OFF
      id
    }
  }
  

  package  {
    class FlipContents {
        {static} - I_UNDEFINED : int
        {static} - I_BACKGROUND : int
        {static} - I_PRIOR : int
        {static} - I_COPIED : int
        {static} - NAMES : String[]
        {static} + UNDEFINED : FlipContents
        {static} + BACKGROUND : FlipContents
        {static} + PRIOR : FlipContents
        {static} + COPIED : FlipContents
        - FlipContents()
    }
  }
  

  package  {
    class SingleBufferStrategy {
        - caps : BufferCapabilities
        + SingleBufferStrategy()
        + getCapabilities()
        + getDrawGraphics()
        + contentsLost()
        + contentsRestored()
        + show()
    }
  }
  

  package  {
    class CompareGUI {
        ~ p : JPanel
        ~ p2 : JPanel
        ~ textArea : JTextArea
        ~ textArea1 : JTextArea
        ~ scrollPane : JScrollPane
        ~ scrollPane1 : JScrollPane
        ~ itemString : String[]
        ~ itemList : JComboBox
        ~ itemList2 : JComboBox
        + CompareGUI()
        + actionPerformed()
    }
  }
  

  package  {
    class AccessibleJFrame {
        # AccessibleJFrame()
        + getAccessibleName()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTFrame {
        {static} - serialVersionUID : long
        # AccessibleAWTFrame()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTWindow {
        {static} - serialVersionUID : long
        # AccessibleAWTWindow()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum Type {
      NORMAL
      UTILITY
      POPUP
    }
  }
  

  package  {
    class WindowDisposerRecord {
        ~ owner : WeakReference<Window>
        ~ weakThis : WeakReference<Window>
        ~ context : WeakReference<AppContext>
        ~ WindowDisposerRecord()
        + updateOwner()
        + dispose()
    }
  }
  

  package  {
    class AccessibleAWTContainer {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleContainerHandler : ContainerListener
        # AccessibleAWTContainer()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getAccessibleAt()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class DropTargetEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - DropTargetEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    interface EventTargetFilter {
        {abstract} + accept()
    }
  }
  

  package  {
    class MouseEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - MouseEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    class WakingRunnable {
        ~ WakingRunnable()
        + run()
    }
  }
  

  package  {
    class AWTTreeLock {
        ~ AWTTreeLock()
    }
  }
  

  package  {
    abstract class AccessibleAWTComponent {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleAWTComponentHandler : ComponentListener
        # accessibleAWTFocusHandler : FocusListener
        # AccessibleAWTComponent()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
        + getAccessibleName()
        + getAccessibleDescription()
        + getAccessibleRole()
        + getAccessibleStateSet()
        + getAccessibleParent()
        + getAccessibleIndexInParent()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getLocale()
        + getAccessibleComponent()
        + getBackground()
        + setBackground()
        + getForeground()
        + setForeground()
        + getCursor()
        + setCursor()
        + getFont()
        + setFont()
        + getFontMetrics()
        + isEnabled()
        + setEnabled()
        + isVisible()
        + setVisible()
        + isShowing()
        + contains()
        + getLocationOnScreen()
        + getLocation()
        + setLocation()
        + getBounds()
        + setBounds()
        + getSize()
        + setSize()
        + getAccessibleAt()
        + isFocusTraversable()
        + requestFocus()
        + addFocusListener()
        + removeFocusListener()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum BaselineResizeBehavior {
      CONSTANT_ASCENT
      CONSTANT_DESCENT
      CENTER_OFFSET
      OTHER
    }
  }
  

  package  {
    class BltBufferStrategy {
        # caps : BufferCapabilities
        # backBuffers : VolatileImage[]
        # validatedContents : boolean
        # width : int
        # height : int
        - insets : Insets
        # BltBufferStrategy()
        + dispose()
        # createBackBuffers()
        + getCapabilities()
        + getDrawGraphics()
        ~ getBackBuffer()
        + show()
        ~ showSubRegion()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
    }
  }
  

  package  {
    class BltSubRegionBufferStrategy {
        # BltSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class DummyRequestFocusController {
        - DummyRequestFocusController()
        + acceptRequestFocus()
    }
  }
  

  package  {
    class FlipBufferStrategy {
        # numBuffers : int
        # caps : BufferCapabilities
        # drawBuffer : Image
        # drawVBuffer : VolatileImage
        # validatedContents : boolean
        ~ width : int
        ~ height : int
        # FlipBufferStrategy()
        # createBuffers()
        - updateInternalBuffers()
        # getBackBuffer()
        # flip()
        ~ flipSubRegion()
        # destroyBuffers()
        + getCapabilities()
        + getDrawGraphics()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
        + show()
        ~ showSubRegion()
        + dispose()
    }
  }
  

  package  {
    class FlipSubRegionBufferStrategy {
        # FlipSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class ProxyCapabilities {
        - orig : BufferCapabilities
        - ProxyCapabilities()
    }
  }
  

  package  {
    enum VSyncType {
      VSYNC_DEFAULT
      VSYNC_ON
      VSYNC_OFF
      id
    }
  }
  

  package  {
    class FlipContents {
        {static} - I_UNDEFINED : int
        {static} - I_BACKGROUND : int
        {static} - I_PRIOR : int
        {static} - I_COPIED : int
        {static} - NAMES : String[]
        {static} + UNDEFINED : FlipContents
        {static} + BACKGROUND : FlipContents
        {static} + PRIOR : FlipContents
        {static} + COPIED : FlipContents
        - FlipContents()
    }
  }
  

  package  {
    class SingleBufferStrategy {
        - caps : BufferCapabilities
        + SingleBufferStrategy()
        + getCapabilities()
        + getDrawGraphics()
        + contentsLost()
        + contentsRestored()
        + show()
    }
  }
  

  package  {
    class HomeGUI {
        + HomeGUI()
    }
  }
  

  package  {
    class AccessibleJFrame {
        # AccessibleJFrame()
        + getAccessibleName()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTFrame {
        {static} - serialVersionUID : long
        # AccessibleAWTFrame()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTWindow {
        {static} - serialVersionUID : long
        # AccessibleAWTWindow()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum Type {
      NORMAL
      UTILITY
      POPUP
    }
  }
  

  package  {
    class WindowDisposerRecord {
        ~ owner : WeakReference<Window>
        ~ weakThis : WeakReference<Window>
        ~ context : WeakReference<AppContext>
        ~ WindowDisposerRecord()
        + updateOwner()
        + dispose()
    }
  }
  

  package  {
    class AccessibleAWTContainer {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleContainerHandler : ContainerListener
        # AccessibleAWTContainer()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getAccessibleAt()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class DropTargetEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - DropTargetEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    interface EventTargetFilter {
        {abstract} + accept()
    }
  }
  

  package  {
    class MouseEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - MouseEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    class WakingRunnable {
        ~ WakingRunnable()
        + run()
    }
  }
  

  package  {
    class AWTTreeLock {
        ~ AWTTreeLock()
    }
  }
  

  package  {
    abstract class AccessibleAWTComponent {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleAWTComponentHandler : ComponentListener
        # accessibleAWTFocusHandler : FocusListener
        # AccessibleAWTComponent()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
        + getAccessibleName()
        + getAccessibleDescription()
        + getAccessibleRole()
        + getAccessibleStateSet()
        + getAccessibleParent()
        + getAccessibleIndexInParent()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getLocale()
        + getAccessibleComponent()
        + getBackground()
        + setBackground()
        + getForeground()
        + setForeground()
        + getCursor()
        + setCursor()
        + getFont()
        + setFont()
        + getFontMetrics()
        + isEnabled()
        + setEnabled()
        + isVisible()
        + setVisible()
        + isShowing()
        + contains()
        + getLocationOnScreen()
        + getLocation()
        + setLocation()
        + getBounds()
        + setBounds()
        + getSize()
        + setSize()
        + getAccessibleAt()
        + isFocusTraversable()
        + requestFocus()
        + addFocusListener()
        + removeFocusListener()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum BaselineResizeBehavior {
      CONSTANT_ASCENT
      CONSTANT_DESCENT
      CENTER_OFFSET
      OTHER
    }
  }
  

  package  {
    class BltBufferStrategy {
        # caps : BufferCapabilities
        # backBuffers : VolatileImage[]
        # validatedContents : boolean
        # width : int
        # height : int
        - insets : Insets
        # BltBufferStrategy()
        + dispose()
        # createBackBuffers()
        + getCapabilities()
        + getDrawGraphics()
        ~ getBackBuffer()
        + show()
        ~ showSubRegion()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
    }
  }
  

  package  {
    class BltSubRegionBufferStrategy {
        # BltSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class DummyRequestFocusController {
        - DummyRequestFocusController()
        + acceptRequestFocus()
    }
  }
  

  package  {
    class FlipBufferStrategy {
        # numBuffers : int
        # caps : BufferCapabilities
        # drawBuffer : Image
        # drawVBuffer : VolatileImage
        # validatedContents : boolean
        ~ width : int
        ~ height : int
        # FlipBufferStrategy()
        # createBuffers()
        - updateInternalBuffers()
        # getBackBuffer()
        # flip()
        ~ flipSubRegion()
        # destroyBuffers()
        + getCapabilities()
        + getDrawGraphics()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
        + show()
        ~ showSubRegion()
        + dispose()
    }
  }
  

  package  {
    class FlipSubRegionBufferStrategy {
        # FlipSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class ProxyCapabilities {
        - orig : BufferCapabilities
        - ProxyCapabilities()
    }
  }
  

  package  {
    enum VSyncType {
      VSYNC_DEFAULT
      VSYNC_ON
      VSYNC_OFF
      id
    }
  }
  

  package  {
    class FlipContents {
        {static} - I_UNDEFINED : int
        {static} - I_BACKGROUND : int
        {static} - I_PRIOR : int
        {static} - I_COPIED : int
        {static} - NAMES : String[]
        {static} + UNDEFINED : FlipContents
        {static} + BACKGROUND : FlipContents
        {static} + PRIOR : FlipContents
        {static} + COPIED : FlipContents
        - FlipContents()
    }
  }
  

  package  {
    class SingleBufferStrategy {
        - caps : BufferCapabilities
        + SingleBufferStrategy()
        + getCapabilities()
        + getDrawGraphics()
        + contentsLost()
        + contentsRestored()
        + show()
    }
  }
  

  package  {
    class LoginGUI {
        ~ usernameField : JTextField
        ~ passwordField : JPasswordField
        ~ LoginButton : JButton
        + LoginGUI()
        + actionPerformed()
    }
  }
  

  package  {
    class AccessibleJFrame {
        # AccessibleJFrame()
        + getAccessibleName()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTFrame {
        {static} - serialVersionUID : long
        # AccessibleAWTFrame()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTWindow {
        {static} - serialVersionUID : long
        # AccessibleAWTWindow()
        + getAccessibleRole()
        + getAccessibleStateSet()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum Type {
      NORMAL
      UTILITY
      POPUP
    }
  }
  

  package  {
    class WindowDisposerRecord {
        ~ owner : WeakReference<Window>
        ~ weakThis : WeakReference<Window>
        ~ context : WeakReference<AppContext>
        ~ WindowDisposerRecord()
        + updateOwner()
        + dispose()
    }
  }
  

  package  {
    class AccessibleAWTContainer {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleContainerHandler : ContainerListener
        # AccessibleAWTContainer()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getAccessibleAt()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class DropTargetEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - DropTargetEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    interface EventTargetFilter {
        {abstract} + accept()
    }
  }
  

  package  {
    class MouseEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - MouseEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    class WakingRunnable {
        ~ WakingRunnable()
        + run()
    }
  }
  

  package  {
    class AWTTreeLock {
        ~ AWTTreeLock()
    }
  }
  

  package  {
    abstract class AccessibleAWTComponent {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleAWTComponentHandler : ComponentListener
        # accessibleAWTFocusHandler : FocusListener
        # AccessibleAWTComponent()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
        + getAccessibleName()
        + getAccessibleDescription()
        + getAccessibleRole()
        + getAccessibleStateSet()
        + getAccessibleParent()
        + getAccessibleIndexInParent()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getLocale()
        + getAccessibleComponent()
        + getBackground()
        + setBackground()
        + getForeground()
        + setForeground()
        + getCursor()
        + setCursor()
        + getFont()
        + setFont()
        + getFontMetrics()
        + isEnabled()
        + setEnabled()
        + isVisible()
        + setVisible()
        + isShowing()
        + contains()
        + getLocationOnScreen()
        + getLocation()
        + setLocation()
        + getBounds()
        + setBounds()
        + getSize()
        + setSize()
        + getAccessibleAt()
        + isFocusTraversable()
        + requestFocus()
        + addFocusListener()
        + removeFocusListener()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    enum BaselineResizeBehavior {
      CONSTANT_ASCENT
      CONSTANT_DESCENT
      CENTER_OFFSET
      OTHER
    }
  }
  

  package  {
    class BltBufferStrategy {
        # caps : BufferCapabilities
        # backBuffers : VolatileImage[]
        # validatedContents : boolean
        # width : int
        # height : int
        - insets : Insets
        # BltBufferStrategy()
        + dispose()
        # createBackBuffers()
        + getCapabilities()
        + getDrawGraphics()
        ~ getBackBuffer()
        + show()
        ~ showSubRegion()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
    }
  }
  

  package  {
    class BltSubRegionBufferStrategy {
        # BltSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class DummyRequestFocusController {
        - DummyRequestFocusController()
        + acceptRequestFocus()
    }
  }
  

  package  {
    class FlipBufferStrategy {
        # numBuffers : int
        # caps : BufferCapabilities
        # drawBuffer : Image
        # drawVBuffer : VolatileImage
        # validatedContents : boolean
        ~ width : int
        ~ height : int
        # FlipBufferStrategy()
        # createBuffers()
        - updateInternalBuffers()
        # getBackBuffer()
        # flip()
        ~ flipSubRegion()
        # destroyBuffers()
        + getCapabilities()
        + getDrawGraphics()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
        + show()
        ~ showSubRegion()
        + dispose()
    }
  }
  

  package  {
    class FlipSubRegionBufferStrategy {
        # FlipSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class ProxyCapabilities {
        - orig : BufferCapabilities
        - ProxyCapabilities()
    }
  }
  

  package  {
    enum VSyncType {
      VSYNC_DEFAULT
      VSYNC_ON
      VSYNC_OFF
      id
    }
  }
  

  package  {
    class FlipContents {
        {static} - I_UNDEFINED : int
        {static} - I_BACKGROUND : int
        {static} - I_PRIOR : int
        {static} - I_COPIED : int
        {static} - NAMES : String[]
        {static} + UNDEFINED : FlipContents
        {static} + BACKGROUND : FlipContents
        {static} + PRIOR : FlipContents
        {static} + COPIED : FlipContents
        - FlipContents()
    }
  }
  

  package  {
    class SingleBufferStrategy {
        - caps : BufferCapabilities
        + SingleBufferStrategy()
        + getCapabilities()
        + getDrawGraphics()
        + contentsLost()
        + contentsRestored()
        + show()
    }
  }
  

  package  {
    class Phone {
    }
  }
  

  package  {
    class PhoneDriver {
        {static} + main()
    }
  }
  

  package  {
    class newPhone {
        - name : String
        - dimensions : String
        - weight : double
        - displayType : String
        - displaySize : double
        - Resolution : String
        - multitouch : String
        - os : String
        - cpu : String
        - fingerprint : String
        - cost : double
        {static} - allPhones : ArrayList<newPhone>
        + newPhone()
        + newPhone()
        + getName()
        + setName()
        + getDimensions()
        + setDimensions()
        + getWeight()
        + setWeight()
        + getDisplayType()
        + setDisplayType()
        + getDisplaySize()
        + setDisplaySize()
        + getResolution()
        + setResolution()
        + getMultitouch()
        + setMultitouch()
        + getOs()
        + setOs()
        + getCpu()
        + setCpu()
        + getFingerprint()
        + setFingerprint()
        + getCost()
        + setCost()
        + toString()
        {static} + createPhone()
        {static} + getAllPhones()
    }
  }
  

  package  {
    class oldPhone {
        - name : String
        - dimensions : String
        - weight : double
        - displayType : String
        - displaySize : double
        - Resolution : String
        - multitouch : String
        - os : String
        - cpu : String
        - fingerprint : String
        - cost : double
        - keyboardType : String
        - flip : String
        + getKeyboardType()
        + setKeyboardType()
        + getFlip()
        + setFlip()
        + getName()
        + setName()
        + getDimensions()
        + setDimensions()
        + getWeight()
        + setWeight()
        + getDisplayType()
        + setDisplayType()
        + getDisplaySize()
        + setDisplaySize()
        + getResolution()
        + setResolution()
        + getMultitouch()
        + setMultitouch()
        + getOs()
        + setOs()
        + getCpu()
        + setCpu()
        + getFingerprint()
        + setFingerprint()
        + getCost()
        + setCost()
        + oldPhone()
        + oldPhone()
        + toString()
    }
  }
  

  BuyGUI -up-|> ActionListener
  BuyGUI -up-|> JFrame
  BuyGUI +-down- AccessibleJFrame
  BuyGUI +-down- AccessibleAWTFrame
  BuyGUI +-down- AccessibleAWTWindow
  BuyGUI +-down- Type
  BuyGUI +-down- WindowDisposerRecord
  BuyGUI +-down- AccessibleAWTContainer
  BuyGUI +-down- DropTargetEventTargetFilter
  BuyGUI +-down- EventTargetFilter
  BuyGUI +-down- MouseEventTargetFilter
  BuyGUI +-down- WakingRunnable
  BuyGUI +-down- AWTTreeLock
  BuyGUI +-down- AccessibleAWTComponent
  BuyGUI +-down- BaselineResizeBehavior
  BuyGUI +-down- BltBufferStrategy
  BuyGUI +-down- BltSubRegionBufferStrategy
  BuyGUI +-down- DummyRequestFocusController
  BuyGUI +-down- FlipBufferStrategy
  BuyGUI +-down- FlipSubRegionBufferStrategy
  BuyGUI +-down- ProxyCapabilities
  BuyGUI +-down- SingleBufferStrategy
  AccessibleJFrame -up-|> AccessibleAWTFrame
  AccessibleJFrame +-down- AccessibleContainerHandler
  AccessibleJFrame +-down- AccessibleAWTComponentHandler
  AccessibleJFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTFrame -up-|> AccessibleAWTWindow
  AccessibleAWTFrame +-down- AccessibleContainerHandler
  AccessibleAWTFrame +-down- AccessibleAWTComponentHandler
  AccessibleAWTFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTWindow -up-|> AccessibleAWTContainer
  AccessibleAWTWindow +-down- AccessibleContainerHandler
  AccessibleAWTWindow +-down- AccessibleAWTComponentHandler
  AccessibleAWTWindow +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  WindowDisposerRecord -up-|> DisposerRecord
  AccessibleAWTContainer -up-|> AccessibleAWTComponent
  AccessibleAWTContainer +-down- AccessibleContainerHandler
  AccessibleAWTContainer +-down- AccessibleAWTComponentHandler
  AccessibleAWTContainer +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  DropTargetEventTargetFilter -up-|> EventTargetFilter
  MouseEventTargetFilter -up-|> EventTargetFilter
  WakingRunnable -up-|> Runnable
  AccessibleAWTComponent -up-|> Serializable
  AccessibleAWTComponent -up-|> AccessibleComponent
  AccessibleAWTComponent -up-|> AccessibleContext
  AccessibleAWTComponent +-down- AccessibleAWTComponentHandler
  AccessibleAWTComponent +-down- AccessibleAWTFocusHandler
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  BltBufferStrategy -up-|> BufferStrategy
  BltSubRegionBufferStrategy -up-|> SubRegionShowable
  BltSubRegionBufferStrategy -up-|> BltBufferStrategy
  DummyRequestFocusController -up-|> RequestFocusController
  FlipBufferStrategy -up-|> BufferStrategy
  FlipSubRegionBufferStrategy -up-|> SubRegionShowable
  FlipSubRegionBufferStrategy -up-|> FlipBufferStrategy
  ProxyCapabilities -up-|> ExtendedBufferCapabilities
  ProxyCapabilities +-down- VSyncType
  ProxyCapabilities +-down- FlipContents
  FlipContents -up-|> AttributeValue
  SingleBufferStrategy -up-|> BufferStrategy
  CheckoutGUI -up-|> JFrame
  CheckoutGUI +-down- AccessibleJFrame
  CheckoutGUI +-down- AccessibleAWTFrame
  CheckoutGUI +-down- AccessibleAWTWindow
  CheckoutGUI +-down- Type
  CheckoutGUI +-down- WindowDisposerRecord
  CheckoutGUI +-down- AccessibleAWTContainer
  CheckoutGUI +-down- DropTargetEventTargetFilter
  CheckoutGUI +-down- EventTargetFilter
  CheckoutGUI +-down- MouseEventTargetFilter
  CheckoutGUI +-down- WakingRunnable
  CheckoutGUI +-down- AWTTreeLock
  CheckoutGUI +-down- AccessibleAWTComponent
  CheckoutGUI +-down- BaselineResizeBehavior
  CheckoutGUI +-down- BltBufferStrategy
  CheckoutGUI +-down- BltSubRegionBufferStrategy
  CheckoutGUI +-down- DummyRequestFocusController
  CheckoutGUI +-down- FlipBufferStrategy
  CheckoutGUI +-down- FlipSubRegionBufferStrategy
  CheckoutGUI +-down- ProxyCapabilities
  CheckoutGUI +-down- SingleBufferStrategy
  AccessibleJFrame -up-|> AccessibleAWTFrame
  AccessibleJFrame +-down- AccessibleContainerHandler
  AccessibleJFrame +-down- AccessibleAWTComponentHandler
  AccessibleJFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTFrame -up-|> AccessibleAWTWindow
  AccessibleAWTFrame +-down- AccessibleContainerHandler
  AccessibleAWTFrame +-down- AccessibleAWTComponentHandler
  AccessibleAWTFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTWindow -up-|> AccessibleAWTContainer
  AccessibleAWTWindow +-down- AccessibleContainerHandler
  AccessibleAWTWindow +-down- AccessibleAWTComponentHandler
  AccessibleAWTWindow +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  WindowDisposerRecord -up-|> DisposerRecord
  AccessibleAWTContainer -up-|> AccessibleAWTComponent
  AccessibleAWTContainer +-down- AccessibleContainerHandler
  AccessibleAWTContainer +-down- AccessibleAWTComponentHandler
  AccessibleAWTContainer +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  DropTargetEventTargetFilter -up-|> EventTargetFilter
  MouseEventTargetFilter -up-|> EventTargetFilter
  WakingRunnable -up-|> Runnable
  AccessibleAWTComponent -up-|> Serializable
  AccessibleAWTComponent -up-|> AccessibleComponent
  AccessibleAWTComponent -up-|> AccessibleContext
  AccessibleAWTComponent +-down- AccessibleAWTComponentHandler
  AccessibleAWTComponent +-down- AccessibleAWTFocusHandler
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  BltBufferStrategy -up-|> BufferStrategy
  BltSubRegionBufferStrategy -up-|> SubRegionShowable
  BltSubRegionBufferStrategy -up-|> BltBufferStrategy
  DummyRequestFocusController -up-|> RequestFocusController
  FlipBufferStrategy -up-|> BufferStrategy
  FlipSubRegionBufferStrategy -up-|> SubRegionShowable
  FlipSubRegionBufferStrategy -up-|> FlipBufferStrategy
  ProxyCapabilities -up-|> ExtendedBufferCapabilities
  ProxyCapabilities +-down- VSyncType
  ProxyCapabilities +-down- FlipContents
  FlipContents -up-|> AttributeValue
  SingleBufferStrategy -up-|> BufferStrategy
  CompareGUI -up-|> ActionListener
  CompareGUI -up-|> JFrame
  CompareGUI +-down- AccessibleJFrame
  CompareGUI +-down- AccessibleAWTFrame
  CompareGUI +-down- AccessibleAWTWindow
  CompareGUI +-down- Type
  CompareGUI +-down- WindowDisposerRecord
  CompareGUI +-down- AccessibleAWTContainer
  CompareGUI +-down- DropTargetEventTargetFilter
  CompareGUI +-down- EventTargetFilter
  CompareGUI +-down- MouseEventTargetFilter
  CompareGUI +-down- WakingRunnable
  CompareGUI +-down- AWTTreeLock
  CompareGUI +-down- AccessibleAWTComponent
  CompareGUI +-down- BaselineResizeBehavior
  CompareGUI +-down- BltBufferStrategy
  CompareGUI +-down- BltSubRegionBufferStrategy
  CompareGUI +-down- DummyRequestFocusController
  CompareGUI +-down- FlipBufferStrategy
  CompareGUI +-down- FlipSubRegionBufferStrategy
  CompareGUI +-down- ProxyCapabilities
  CompareGUI +-down- SingleBufferStrategy
  AccessibleJFrame -up-|> AccessibleAWTFrame
  AccessibleJFrame +-down- AccessibleContainerHandler
  AccessibleJFrame +-down- AccessibleAWTComponentHandler
  AccessibleJFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTFrame -up-|> AccessibleAWTWindow
  AccessibleAWTFrame +-down- AccessibleContainerHandler
  AccessibleAWTFrame +-down- AccessibleAWTComponentHandler
  AccessibleAWTFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTWindow -up-|> AccessibleAWTContainer
  AccessibleAWTWindow +-down- AccessibleContainerHandler
  AccessibleAWTWindow +-down- AccessibleAWTComponentHandler
  AccessibleAWTWindow +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  WindowDisposerRecord -up-|> DisposerRecord
  AccessibleAWTContainer -up-|> AccessibleAWTComponent
  AccessibleAWTContainer +-down- AccessibleContainerHandler
  AccessibleAWTContainer +-down- AccessibleAWTComponentHandler
  AccessibleAWTContainer +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  DropTargetEventTargetFilter -up-|> EventTargetFilter
  MouseEventTargetFilter -up-|> EventTargetFilter
  WakingRunnable -up-|> Runnable
  AccessibleAWTComponent -up-|> Serializable
  AccessibleAWTComponent -up-|> AccessibleComponent
  AccessibleAWTComponent -up-|> AccessibleContext
  AccessibleAWTComponent +-down- AccessibleAWTComponentHandler
  AccessibleAWTComponent +-down- AccessibleAWTFocusHandler
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  BltBufferStrategy -up-|> BufferStrategy
  BltSubRegionBufferStrategy -up-|> SubRegionShowable
  BltSubRegionBufferStrategy -up-|> BltBufferStrategy
  DummyRequestFocusController -up-|> RequestFocusController
  FlipBufferStrategy -up-|> BufferStrategy
  FlipSubRegionBufferStrategy -up-|> SubRegionShowable
  FlipSubRegionBufferStrategy -up-|> FlipBufferStrategy
  ProxyCapabilities -up-|> ExtendedBufferCapabilities
  ProxyCapabilities +-down- VSyncType
  ProxyCapabilities +-down- FlipContents
  FlipContents -up-|> AttributeValue
  SingleBufferStrategy -up-|> BufferStrategy
  HomeGUI -up-|> JFrame
  HomeGUI +-down- AccessibleJFrame
  HomeGUI +-down- AccessibleAWTFrame
  HomeGUI +-down- AccessibleAWTWindow
  HomeGUI +-down- Type
  HomeGUI +-down- WindowDisposerRecord
  HomeGUI +-down- AccessibleAWTContainer
  HomeGUI +-down- DropTargetEventTargetFilter
  HomeGUI +-down- EventTargetFilter
  HomeGUI +-down- MouseEventTargetFilter
  HomeGUI +-down- WakingRunnable
  HomeGUI +-down- AWTTreeLock
  HomeGUI +-down- AccessibleAWTComponent
  HomeGUI +-down- BaselineResizeBehavior
  HomeGUI +-down- BltBufferStrategy
  HomeGUI +-down- BltSubRegionBufferStrategy
  HomeGUI +-down- DummyRequestFocusController
  HomeGUI +-down- FlipBufferStrategy
  HomeGUI +-down- FlipSubRegionBufferStrategy
  HomeGUI +-down- ProxyCapabilities
  HomeGUI +-down- SingleBufferStrategy
  AccessibleJFrame -up-|> AccessibleAWTFrame
  AccessibleJFrame +-down- AccessibleContainerHandler
  AccessibleJFrame +-down- AccessibleAWTComponentHandler
  AccessibleJFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTFrame -up-|> AccessibleAWTWindow
  AccessibleAWTFrame +-down- AccessibleContainerHandler
  AccessibleAWTFrame +-down- AccessibleAWTComponentHandler
  AccessibleAWTFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTWindow -up-|> AccessibleAWTContainer
  AccessibleAWTWindow +-down- AccessibleContainerHandler
  AccessibleAWTWindow +-down- AccessibleAWTComponentHandler
  AccessibleAWTWindow +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  WindowDisposerRecord -up-|> DisposerRecord
  AccessibleAWTContainer -up-|> AccessibleAWTComponent
  AccessibleAWTContainer +-down- AccessibleContainerHandler
  AccessibleAWTContainer +-down- AccessibleAWTComponentHandler
  AccessibleAWTContainer +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  DropTargetEventTargetFilter -up-|> EventTargetFilter
  MouseEventTargetFilter -up-|> EventTargetFilter
  WakingRunnable -up-|> Runnable
  AccessibleAWTComponent -up-|> Serializable
  AccessibleAWTComponent -up-|> AccessibleComponent
  AccessibleAWTComponent -up-|> AccessibleContext
  AccessibleAWTComponent +-down- AccessibleAWTComponentHandler
  AccessibleAWTComponent +-down- AccessibleAWTFocusHandler
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  BltBufferStrategy -up-|> BufferStrategy
  BltSubRegionBufferStrategy -up-|> SubRegionShowable
  BltSubRegionBufferStrategy -up-|> BltBufferStrategy
  DummyRequestFocusController -up-|> RequestFocusController
  FlipBufferStrategy -up-|> BufferStrategy
  FlipSubRegionBufferStrategy -up-|> SubRegionShowable
  FlipSubRegionBufferStrategy -up-|> FlipBufferStrategy
  ProxyCapabilities -up-|> ExtendedBufferCapabilities
  ProxyCapabilities +-down- VSyncType
  ProxyCapabilities +-down- FlipContents
  FlipContents -up-|> AttributeValue
  SingleBufferStrategy -up-|> BufferStrategy
  LoginGUI -up-|> ActionListener
  LoginGUI -up-|> JFrame
  LoginGUI +-down- AccessibleJFrame
  LoginGUI +-down- AccessibleAWTFrame
  LoginGUI +-down- AccessibleAWTWindow
  LoginGUI +-down- Type
  LoginGUI +-down- WindowDisposerRecord
  LoginGUI +-down- AccessibleAWTContainer
  LoginGUI +-down- DropTargetEventTargetFilter
  LoginGUI +-down- EventTargetFilter
  LoginGUI +-down- MouseEventTargetFilter
  LoginGUI +-down- WakingRunnable
  LoginGUI +-down- AWTTreeLock
  LoginGUI +-down- AccessibleAWTComponent
  LoginGUI +-down- BaselineResizeBehavior
  LoginGUI +-down- BltBufferStrategy
  LoginGUI +-down- BltSubRegionBufferStrategy
  LoginGUI +-down- DummyRequestFocusController
  LoginGUI +-down- FlipBufferStrategy
  LoginGUI +-down- FlipSubRegionBufferStrategy
  LoginGUI +-down- ProxyCapabilities
  LoginGUI +-down- SingleBufferStrategy
  AccessibleJFrame -up-|> AccessibleAWTFrame
  AccessibleJFrame +-down- AccessibleContainerHandler
  AccessibleJFrame +-down- AccessibleAWTComponentHandler
  AccessibleJFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTFrame -up-|> AccessibleAWTWindow
  AccessibleAWTFrame +-down- AccessibleContainerHandler
  AccessibleAWTFrame +-down- AccessibleAWTComponentHandler
  AccessibleAWTFrame +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTWindow -up-|> AccessibleAWTContainer
  AccessibleAWTWindow +-down- AccessibleContainerHandler
  AccessibleAWTWindow +-down- AccessibleAWTComponentHandler
  AccessibleAWTWindow +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  WindowDisposerRecord -up-|> DisposerRecord
  AccessibleAWTContainer -up-|> AccessibleAWTComponent
  AccessibleAWTContainer +-down- AccessibleContainerHandler
  AccessibleAWTContainer +-down- AccessibleAWTComponentHandler
  AccessibleAWTContainer +-down- AccessibleAWTFocusHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  DropTargetEventTargetFilter -up-|> EventTargetFilter
  MouseEventTargetFilter -up-|> EventTargetFilter
  WakingRunnable -up-|> Runnable
  AccessibleAWTComponent -up-|> Serializable
  AccessibleAWTComponent -up-|> AccessibleComponent
  AccessibleAWTComponent -up-|> AccessibleContext
  AccessibleAWTComponent +-down- AccessibleAWTComponentHandler
  AccessibleAWTComponent +-down- AccessibleAWTFocusHandler
  AccessibleAWTComponentHandler -up-|> ComponentListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  BltBufferStrategy -up-|> BufferStrategy
  BltSubRegionBufferStrategy -up-|> SubRegionShowable
  BltSubRegionBufferStrategy -up-|> BltBufferStrategy
  DummyRequestFocusController -up-|> RequestFocusController
  FlipBufferStrategy -up-|> BufferStrategy
  FlipSubRegionBufferStrategy -up-|> SubRegionShowable
  FlipSubRegionBufferStrategy -up-|> FlipBufferStrategy
  ProxyCapabilities -up-|> ExtendedBufferCapabilities
  ProxyCapabilities +-down- VSyncType
  ProxyCapabilities +-down- FlipContents
  FlipContents -up-|> AttributeValue
  SingleBufferStrategy -up-|> BufferStrategy
  Phone o-- newPhone : onePlus6
  Phone o-- newPhone : galaxyNote9
  Phone o-- newPhone : mate20pro
  Phone o-- newPhone : iphonexsmax
  Phone o-- newPhone : pixel3xl
  oldPhone -up-|> newPhone


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
